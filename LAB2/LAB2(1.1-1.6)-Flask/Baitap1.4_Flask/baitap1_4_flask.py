# -*- coding: utf-8 -*-
"""Baitap1.4_Flask.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KLkBdCgRQXUmb9gs8wmf4h-Y5mKmQGfk
"""

from PIL import Image
import math
import scipy
import numpy as np
import matplotlib.pyplot as plt
from flask import Flask, render_template,send_file

app = Flask(__name__)

@app.route('/')
def process_image():
  img = Image.open ('bird.png').convert('L')

  #convert image 1 into ndarray
  im1 = np.asarray(img)

  #convert 2D ndarray from 1D array
  b1 = im1.flatten()

  #histogram and bin are computed
  hist, bins = np.histogram(im1, 256, [0,255])

  #cumulative distribution function is computed
  cdf = hist.cumsum()

  #places where cdf = 0 is marked or ignored and
  #rest is stored in cdf_m
  cdf_m = np.ma.masked_equal(cdf,0)
  #histogram equalization is performed
  num_cdf_m = (cdf_m - cdf_m.min()) *255
  den_cdf_m = (cdf.max() - cdf_m.min())
  cdf_m = num_cdf_m/den_cdf_m

  #the masked places in cdf_m are now 0
  cdf = np.ma.filled(cdf_m,0).astype('uint8')

  #cdf values are assigned in the flattened array
  im2 = cdf[b1]

  #im2 is 1D so we use reshape command to
  #make it into 2D
  im3 = np.reshape(im2, im1.shape)

  #converting im3 to an image
  new_img = Image.fromarray(im3)
  temp_image_path = 'temp_image.png'
  new_img.save(temp_image_path)
  return render_template('index_1.4.html',image_path=temp_image_path)
@app.route('/image')
def get_image():
    # Send the saved image file
    return send_file('temp_image.png', mimetype='image/png')

if __name__ == '__main__':
    app.run()